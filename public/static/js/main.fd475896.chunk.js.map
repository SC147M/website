{"version":3,"sources":["helpers/tmath.js","ball.js","renderer.js","game.js","App.js","serviceWorker.js","index.js"],"names":["TMath","x1","y1","x2","y2","Math","pow","d","a","abs","b","c","acos","PI","angle","distance","x","y","sin","cos","Ball","type","this","speed","potted","originalX","originalY","Renderer","ballRadius","tableWidth","tableHeight","tableOffsetX","tableOffsetY","pocketScale","gameZoom","canvas","document","getElementById","ctx","getContext","ballColors","pottedBalls","balls","queueBall","shooting","power","drawTable","forEach","ball","drawBall","drawQueue","drawPower","renderScore","fps","beginPath","font","fillStyle","textAlign","fillText","toString","width","oY","height","oX","red","yellow","green","brown","blue","pink","black","score","roundRect","fill","fillRect","w","strokeStyle","lineWidth","moveTo","lineTo","stroke","closePath","dLineX","dArcRadius","arc","drawPocket","zoom","grd","createRadialGradient","addColorStop","lightenDarkenColor","s","getCoordsByDistanceAndAngle","c1","setLineDash","h","r","arcTo","col","amt","usePound","slice","num","parseInt","g","Game","mouseX","mouseY","mouseArea","phase","pottedBallsAll","pottedBallsShot","firstTouchedBallType","queueBallCollisions","mouseDown","gameOver","powerPct","yRotation","renderer","canvasOffsetLeft","offsetLeft","canvasOffsetTop","offsetTop","powerBoxX","powerBoxY","addEventListener","onMouseMove","bind","onMouseDown","onMouseUp","audioHit","Audio","src","preload","audioQueue","volume","audioPot","delay","frame","currentDate","pinkX","bc","ev","rect","target","getBoundingClientRect","clientX","left","clientY","top","setPowerPct","detectArea","play","getPower","setup","run","style","cursor","window","requestAnimationFrame","loop","pctX","pctY","timestamp","seg","floor","calcNewBallPosition","ballsAreMoving","getAngle","renderGameOver","render","moving","setupNewShot","length","respotBalls","spotIsBlocked","spot","findNextHighestSpot","testBall","i","getBallByType","result","blocked","getDistance","l","testCollisions","tpmAngle","ballIsPotted","isPotFoul","renderFoul","push","sound","cloneNode","isCollisionFoul","console","log","diff","pct","App","className","id","React","Component","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fd475896.chunk.js","sourcesContent":["class TMath {\n    /**\n     *\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     *\n     * @returns {number}\n     */\n    static getDistance(x1, y1, x2, y2) {\n        return Math.pow(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2), 0.5);\n    }\n\n\n    /**\n     *\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     *\n     * @returns {number}\n     */\n    static getAngle(x1, y1, x2, y2) {\n        // α = arccos( (b² + c² - a²) / 2bc )\n        const a = Math.abs(x1 - x2);\n        const b = Math.abs(y1 - y2);\n        const c = Math.pow(Math.pow(a, 2) + Math.pow(b, 2), 0.5);\n        let d;\n        if (x1 > x2) {\n            if (y1 < y2) {\n                // Q1\n                d = (Math.pow(b, 2) + Math.pow(c, 2) - Math.pow(a, 2)) / (2 * b * c);\n                return Math.acos(d);\n\n            } else if (y1 === y2) {\n                return Math.PI / 2;\n\n            } else {\n                // Q2\n                d = (Math.pow(b, 2) + Math.pow(c, 2) - Math.pow(a, 2)) / (2 * b * c);\n\n               return Math.acos(-d);\n            }\n        } else if (x1 === x2) {\n            return (y1 > y2) ? Math.PI : 0;\n        } else {\n            if (y1 > y2) {\n                // Q3\n                d = (Math.pow(b, 2) + Math.pow(c, 2) - Math.pow(a, 2)) / (2 * b * c);\n\n                return Math.acos(d) + Math.PI;\n            } else if (y1 === y2) {\n                return Math.PI + Math.PI / 2\n\n            } else {\n                // Q4\n                d = (Math.pow(b, 2) + Math.pow(c, 2) - Math.pow(a, 2)) / (2 * b * c);\n                return Math.acos(-d) + Math.PI;\n            }\n        }\n    }\n\n    /**\n     *\n     * @param {number} angle\n     * @returns {number}\n     */\n    static deg(angle) {\n\n        return   angle * 180 / Math.PI;\n    }\n\n    /**\n     *\n     * @param {number} angle\n     * @returns {number}\n     */\n    static rad(angle) {\n        return angle * Math.PI / 180;\n    }\n\n    static getCoordsByDistanceAndAngle(distance, angle, x, y) {\n        const tx = (Math.sin(angle - Math.PI) * distance) + x;\n        const ty = -(Math.cos(angle - Math.PI) * distance) + y;\n        return {x: tx, y: ty};\n\n        /*\n        gamma = 180° - alpha - beta\n        a = b * sin(alpha) / sin(beta)\n        c = b * sin(gamma) / sin(beta)\n        ha = b * sin(gamma)\n        hb = c * sin(alpha)\n        hc = a * sin(beta)\n        u = a + b + c\n        A = ha * a / 2 = sqrt((u / 2) * (u / 2 - a) * (u / 2 - b) * (u / 2 - c))\n        ru = a / (2 * sin(alpha))\n        ri = c * sin(alpha / 2) * sin(beta / 2) / sin((alpha + beta) / 2)\n        sa = sqrt(2*(b^2 + c^2) - a^2)/2\n        sb = sqrt(2*(c^2 + a^2) - b^2)/2\n        sc = sqrt(2*(a^2 + b^2) - c^2)/2\n        wa = 2*b*c*cos(alpha/2)/(b + c)\n        wa = 2*c*a*cos(beta/2)/(c + a)\n        wa = 2*a*b*cos(gamma/2)/(a + b)\n         */\n\n    }\n}\n\nexport {TMath}","class Ball {\n    constructor(type, x, y) {\n        this.type = type;\n        this.x = x;\n        this.y = y;\n        this.angle = 0;\n        this.speed = 0;\n        this.potted = false;\n        this.originalX = x;\n        this.originalY = y;\n    }\n}\n\nexport {Ball}","import {TMath} from \"./helpers/tmath\";\nimport {Ball} from \"./ball\";\n\nclass Renderer {\n    constructor(ballRadius, tableWidth, tableHeight, tableOffsetX, tableOffsetY, pocketScale, gameZoom) {\n        /**\n         * @type {HTMLElement}\n         */\n        this.canvas = document.getElementById('canvas');\n\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        this.ctx = this.canvas.getContext('2d');\n        this.sin = 0;\n\n        this.ballColors = [\n            '#e4e4e4',\n            '#ff0000',\n            '#fcba03',\n            '#54ed00',\n            '#683712',\n            '#413dd5',\n            '#e714b6',\n            '#3d3d3d',\n        ];\n        this.ballRadius = ballRadius;\n        this.tableWidth = tableWidth;\n        this.tableHeight = tableHeight;\n        this.tableOffsetX = tableOffsetX;\n        this.tableOffsetY = tableOffsetY;\n        this.pocketScale = pocketScale;\n        this.pottedBalls = [];\n        this.gameZoom = gameZoom;\n    }\n\n    /**\n     *\n     * @param {[Ball]} balls\n     * @param {Ball} queueBall\n     * @param {Boolean} shooting\n     * @param {number} power\n     */\n    render(balls, queueBall, shooting, power) {\n        this.drawTable();\n\n        balls.forEach((ball) => {\n            this.drawBall(ball);\n        });\n\n        if (!shooting) {\n            this.drawQueue(queueBall, power);\n\n        }\n\n        this.drawPower(power);\n        this.renderScore();\n    }\n\n    renderFps (fps) {\n        this.ctx.beginPath();\n        this.ctx.font = \"14px Arial, Helvetica, sans-serif\";\n        this.ctx.fillStyle = '#000000';\n        this.ctx.textAlign = \"right\";\n        this.ctx.fillText(fps.toString(), this.canvas.width  -100, 20);\n    }\n\n\n    renderScore() {\n        const oX = 50;\n        const oY = this.canvas.height - 35;\n        const bOX = 30;\n        const zoom = 0.7;\n\n        this.drawBall(new Ball(1, oX, oY), zoom);\n        this.drawBall(new Ball(2, oX + bOX, oY), zoom);\n        this.drawBall(new Ball(3, oX + 2 * bOX, oY), zoom);\n        this.drawBall(new Ball(4, oX + 3 * bOX, oY), zoom);\n        this.drawBall(new Ball(5, oX + 4 * bOX, oY), zoom);\n        this.drawBall(new Ball(6, oX + 5 * bOX, oY), zoom);\n        this.drawBall(new Ball(7, oX + 6 * bOX, oY), zoom);\n\n\n        let red = 0;\n        let yellow = 0;\n        let green = 0;\n        let brown = 0;\n        let blue = 0;\n        let pink = 0;\n        let black = 0;\n        let score = 0;\n\n        this.pottedBalls.forEach((ball) => {\n            switch (ball.type) {\n                case 1:\n                    red++;\n                    score += 1;\n                    break;\n                case 2:\n                    yellow++;\n                    score += 2;\n                    break;\n                case 3:\n                    green++;\n                    score += 3;\n                    break;\n                case 4:\n                    brown++;\n                    score += 4;\n                    break;\n                case 5:\n                    blue++;\n                    score += 5;\n                    break;\n                case 6:\n                    pink++;\n                    score += 6;\n                    break;\n                case 7:\n                    black++;\n                    score += 7;\n                    break;\n            }\n        });\n\n        this.ctx.beginPath();\n        this.ctx.font = \"10px Arial, Helvetica, sans-serif\";\n        this.ctx.fillStyle = '#ffffff';\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(red.toString(), oX, oY + 24);\n        this.ctx.fillText(yellow.toString(), oX + bOX, oY + 24);\n        this.ctx.fillText(green.toString(), oX + 2 * bOX, oY + 24);\n        this.ctx.fillText(brown.toString(), oX + 3 * bOX, oY + 24);\n        this.ctx.fillText(blue.toString(), oX + 4 * bOX, oY + 24);\n        this.ctx.fillText(pink.toString(), oX + 5 * bOX, oY + 24);\n        this.ctx.fillText(black.toString(), oX + 6 * bOX, oY + 24);\n\n        this.ctx.font = \"20px Arial, Helvetica, sans-serif\";\n        this.ctx.fillStyle = '#ffffff';\n        this.ctx.textAlign = \"left\";\n        this.ctx.fillText(\"Score: \" + score.toString(), oX - 12, oY - 24);\n\n    }\n\n    renderFoul() {\n        this.ctx.beginPath();\n        this.ctx.font = \"100px Arial, Helvetica, sans-serif\";\n        this.ctx.fillStyle = 'rgba(255,255,255,0.3)';\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"FOUL\", this.canvas.width / 2, this.canvas.height / 2 - 50);\n\n\n    }\n\n    renderGameOver() {\n        this.ctx.beginPath();\n        this.ctx.font = \"100px Arial, Helvetica, sans-serif\";\n        this.ctx.fillStyle = 'rgba(255,255,255,0.3)';\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"GAME OVER\", this.canvas.width / 2, this.canvas.height / 2 + 50);\n\n        this.ctx.fillStyle = '#ffffff';\n        this.roundRect(this.canvas.width / 2 - 50, this.canvas.height / 2 + 70, 100, 45, 10);\n        this.ctx.fill();\n\n        this.ctx.beginPath();\n        this.ctx.font = \"20px Arial, Helvetica, sans-serif\";\n        this.ctx.fillStyle = '#000000';\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"RETRY\", this.canvas.width / 2, this.canvas.height / 2 + 100);\n    }\n\n    drawPower(power) {\n        const oY = -18;\n        this.ctx.beginPath();\n        this.ctx.fillStyle = '#ffffff';\n        this.ctx.fillRect(this.canvas.width / 2 - 200, this.canvas.height - 80 - oY, 400, 30);\n\n        this.ctx.beginPath();\n        this.ctx.fillStyle = '#7d7d7d';\n        this.ctx.fillRect(this.canvas.width / 2 - 200 + 1, this.canvas.height - 80  - oY+ 1, 398, 28);\n\n        const w = 398 * power;\n        this.ctx.beginPath();\n        this.ctx.fillStyle = '#137d0a';\n        this.ctx.fillRect(this.canvas.width / 2 - 200 + 1, this.canvas.height - 80 - oY + 1, w, 28);\n\n        this.ctx.beginPath();\n        this.ctx.strokeStyle = '#ffffff';\n        this.ctx.lineWidth = 1;\n        this.ctx.moveTo(this.canvas.width / 2 - 200 + .5, this.canvas.height - 50 - oY);\n        this.ctx.lineTo(this.canvas.width / 2 - 200 + .5, this.canvas.height - 40 - oY);\n        this.ctx.moveTo(this.canvas.width / 2 + .5, this.canvas.height - 50 - oY);\n        this.ctx.lineTo(this.canvas.width / 2 + .5, this.canvas.height - 40 - oY);\n        this.ctx.moveTo(this.canvas.width / 2 + 200 - .5, this.canvas.height - 50 - oY);\n        this.ctx.lineTo(this.canvas.width / 2 + 200 - .5, this.canvas.height - 40 - oY);\n        this.ctx.stroke();\n\n        this.ctx.beginPath();\n        this.ctx.font = \"12px Arial, Helvetica, sans-serif\";\n        this.ctx.fillStyle = '#ffffff';\n        this.ctx.textAlign = \"left\";\n        this.ctx.fillText(\"POWER\", this.canvas.width / 2 - 200, this.canvas.height - 86 - oY);\n\n        this.ctx.textAlign = \"center\";\n        this.ctx.fillText(\"0\", this.canvas.width / 2 - 200, this.canvas.height - 28 - oY);\n        this.ctx.fillText(\"50\", this.canvas.width / 2, this.canvas.height - 28 - oY);\n        this.ctx.fillText(\"JUDD! TRUMP!!!\", this.canvas.width / 2 + 200, this.canvas.height - 28 - oY);\n    }\n\n    drawTable() {\n        this.ctx.beginPath();\n        this.ctx.fillStyle = '#26261f';\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        this.ctx.closePath();\n\n        this.ctx.fillStyle = '#3f1f00';\n        this.roundRect(this.tableOffsetX - 35, this.tableOffsetY - 35, this.tableWidth + 70, this.tableHeight + 70, 35);\n        this.ctx.fill();\n\n        this.ctx.fillStyle = '#2b6d0d';\n        this.roundRect(this.tableOffsetX - 15, this.tableOffsetY - 15, this.tableWidth + 30, this.tableHeight + 30, 15);\n        this.ctx.fill();\n\n        this.ctx.beginPath();\n        this.ctx.fillStyle = '#135105';\n        this.ctx.fillRect(this.tableOffsetX, this.tableOffsetY, this.tableWidth, this.tableHeight);\n        this.ctx.closePath();\n\n        const dLineX = 737 / this.gameZoom;\n        const dArcRadius = 292 / this.gameZoom;\n        this.ctx.beginPath();\n        this.ctx.strokeStyle = '#ffffff';\n        this.ctx.lineWidth = 1;\n        this.ctx.moveTo(dLineX + this.tableOffsetX, this.tableOffsetY);\n        this.ctx.lineTo(dLineX + this.tableOffsetX, this.tableHeight + this.tableOffsetY);\n        this.ctx.stroke();\n\n        this.ctx.beginPath();\n        this.ctx.arc(dLineX + this.tableOffsetX, this.tableHeight / 2 + this.tableOffsetY, dArcRadius, Math.PI / 2, 1.5 * Math.PI);\n        this.ctx.stroke();\n\n        this.drawPocket(0, 0);\n        this.drawPocket(this.tableWidth / 2, 0);\n        this.drawPocket(this.tableWidth, 0);\n        this.drawPocket(0, this.tableHeight);\n        this.drawPocket(this.tableWidth / 2, this.tableHeight);\n        this.drawPocket(this.tableWidth, this.tableHeight);\n    }\n\n    drawPocket(x, y) {\n        this.ctx.beginPath();\n        this.ctx.fillStyle = '#000';\n        this.ctx.arc(x + this.tableOffsetX, y + this.tableOffsetY, this.ballRadius * this.pocketScale, 0, 2 * Math.PI);\n        this.ctx.fill();\n        this.ctx.closePath();\n    }\n\n    /**\n     *\n     * @param {Ball} ball\n     * @param zoom\n     */\n    drawBall(ball, zoom = 1) {\n        const grd = this.ctx.createRadialGradient(ball.x, ball.y, 2, ball.x, ball.y, this.ballRadius * zoom);\n        grd.addColorStop(0, Renderer.lightenDarkenColor(this.ballColors[ball.type], 64));\n        grd.addColorStop(0.5, this.ballColors[ball.type]);\n        grd.addColorStop(1, Renderer.lightenDarkenColor(this.ballColors[ball.type], -24));\n\n\n        this.ctx.beginPath();\n        this.ctx.fillStyle = grd;\n        this.ctx.arc(ball.x, ball.y, this.ballRadius * zoom, 0, 2 * Math.PI);\n        this.ctx.fill();\n        this.ctx.closePath();\n    }\n\n    static lightenDarkenColor(col, amt) {\n        let usePound = false;\n        if (col[0] === \"#\") {\n            col = col.slice(1);\n            usePound = true;\n        }\n\n        let num = parseInt(col, 16);\n\n        let r = (num >> 16) + amt;\n\n        if (r > 255) r = 255;\n        else if (r < 0) r = 0;\n\n        let b = ((num >> 8) & 0x00FF) + amt;\n\n        if (b > 255) b = 255;\n        else if (b < 0) b = 0;\n\n        let g = (num & 0x0000FF) + amt;\n\n        if (g > 255) g = 255;\n        else if (g < 0) g = 0;\n\n        return (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16);\n    }\n\n    /**\n     *\n     * @param {Ball} ball\n     * @param power\n     */\n    drawQueue(ball, power) {\n        const d = 10 + 35 * power;\n        const s = 5 + 35 * power;\n\n        const l = 250;\n        const x = (Math.sin(ball.angle) * l) + ball.x;\n        const y = -(Math.cos(ball.angle) * l) + ball.y;\n        const c = TMath.getCoordsByDistanceAndAngle(-this.ballRadius - d + Math.sin(this.sin) * s, ball.angle, ball.x, ball.y);\n\n        this.ctx.beginPath();\n        this.ctx.strokeStyle = '#92815b';\n        this.ctx.lineWidth = 8;\n\n        this.ctx.moveTo(c.x, c.y);\n        this.ctx.lineTo(x, y);\n        this.ctx.stroke();\n        this.ctx.closePath();\n\n        const l1 = 8;\n        const x1 = (Math.sin(ball.angle) * l1) + ball.x;\n        const y1 = -(Math.cos(ball.angle) * l1) + ball.y;\n        const c1 = TMath.getCoordsByDistanceAndAngle(-this.ballRadius - d + Math.sin(this.sin) * s, ball.angle, x1, y1);\n        this.ctx.beginPath();\n        this.ctx.strokeStyle = '#d5deba';\n        this.ctx.lineWidth = 8;\n        this.ctx.moveTo(c.x, c.y);\n        this.ctx.lineTo(c1.x, c1.y);\n        this.ctx.stroke();\n        this.ctx.closePath();\n\n\n        const l2 = 900;\n        const x2 = (Math.sin(ball.angle + Math.PI) * l2) + ball.x;\n        const y2 = -(Math.cos(ball.angle + Math.PI) * l2) + ball.y;\n\n        this.ctx.beginPath();\n        this.ctx.strokeStyle = 'rgba(255,255,255,0.3)';\n        this.ctx.lineWidth = this.ballRadius * 2;\n        this.ctx.setLineDash([1, 5]);\n        this.ctx.moveTo(ball.x, ball.y);\n        this.ctx.lineTo(x2, y2);\n        this.ctx.stroke();\n        this.ctx.closePath();\n\n        this.ctx.setLineDash([]);\n        this.sin += 0.1 + power / 10;\n    }\n\n    roundRect(x, y, w, h, r) {\n        if (w < 2 * r) r = w / 2;\n        if (h < 2 * r) r = h / 2;\n        this.ctx.beginPath();\n        this.ctx.moveTo(x + r, y);\n        this.ctx.arcTo(x + w, y, x + w, y + h, r);\n        this.ctx.arcTo(x + w, y + h, x, y + h, r);\n        this.ctx.arcTo(x, y + h, x, y, r);\n        this.ctx.arcTo(x, y, x + w, y, r);\n        this.ctx.closePath();\n    }\n}\n\nexport {Renderer}","import {Renderer} from \"./renderer\";\nimport {Ball} from \"./ball\";\nimport {TMath} from \"./helpers/tmath\";\n\nclass Game {\n    constructor() {\n        this.balls = [];\n        this.mouseX = 0;\n        this.mouseY = 0;\n        this.mouseArea = null;\n        this.gameZoom = 4.15;\n\n        this.ballRadius = (52 / 0.9 / this.gameZoom);\n        this.tableWidth = 3556 / this.gameZoom;\n        this.tableHeight = 1778 / this.gameZoom;\n        this.tableOffsetX = 50;\n        this.tableOffsetY = 50;\n        this.pocketScale = 1.9;\n\n        this.phase = 1;\n        this.pottedBallsAll = [];\n        this.pottedBallsShot = [];\n        this.firstTouchedBallType = null;\n\n        this.queueBallCollisions = 0;\n        this.mouseDown = false;\n        this.shooting = false;\n        this.gameOver = false;\n\n        this.powerPct = 0.2;\n        this.yRotation = 0;\n\n        this.renderer = new Renderer(this.ballRadius, this.tableWidth, this.tableHeight, this.tableOffsetX, this.tableOffsetY, this.pocketScale, this.gameZoom);\n        this.canvasOffsetLeft = this.renderer.canvas.offsetLeft;\n        this.canvasOffsetTop = this.renderer.canvas.offsetTop;\n\n        this.powerBoxX = this.renderer.canvas.width / 2 - 200;\n        this.powerBoxY = this.renderer.canvas.height - 80 + 18;\n\n        this.renderer.canvas.addEventListener('mousemove', this.onMouseMove.bind(this));\n        this.renderer.canvas.addEventListener('mousedown', this.onMouseDown.bind(this));\n        this.renderer.canvas.addEventListener('mouseup', this.onMouseUp.bind(this));\n\n        // Audio\n        this.audioHit = new Audio();\n        this.audioHit.src = '/assets/sounds/hit.mp3';\n        this.audioHit.preload = \"auto\";\n\n        this.audioQueue = new Audio();\n        this.audioQueue.src = '/assets/sounds/queue.mp3';\n        this.audioQueue.preload = \"auto\";\n        this.audioQueue.volume = 0.1;\n\n        this.audioPot = new Audio();\n        this.audioPot.src = '/assets/sounds/pot.mp3';\n        this.audioPot.preload = \"auto\";\n        this.audioPot.volume = 0.4;\n\n        this.fps = 60;\n        this.delay = 1000 / this.fps;\n        this.frame = -1;\n        this.currentDate = null;\n    }\n\n    setup() {\n        this.phase = 1;\n        this.pottedBallsAll = [];\n        this.pottedBallsShot = [];\n        this.firstTouchedBallType = null;\n\n        this.queueBallCollisions = 0;\n        this.mouseDown = false;\n        this.shooting = false;\n        this.gameOver = false;\n\n        this.powerPct = 0.3;\n\n        this.queueBall = new Ball(0, this.tableWidth * 80 / 100 + this.tableOffsetX, this.tableHeight * 80 / 100 + this.tableOffsetY);\n\n        const pinkX = (this.tableWidth - this.tableWidth / 2) / 2 + this.tableWidth / 2 + this.tableOffsetX;\n\n        const dLineX = 737 / this.gameZoom + this.tableOffsetX;\n        const dArcRadius = 292 / this.gameZoom;\n\n\n        this.balls = [\n            this.queueBall,\n            new Ball(...this.bc(68, 20)),\n            new Ball(...this.bc(30, 50)),\n            new Ball(...this.bc(85, 40)),\n            new Ball(...this.bc(45, 34)),\n            new Ball(...this.bc(60, 80)),\n            new Ball(...this.bc(63, 22)),\n            new Ball(...this.bc(70, 60)),\n            new Ball(...this.bc(89, 22)),\n            new Ball(...this.bc(84, 13)),\n            new Ball(...this.bc(80, 43)),\n            new Ball(...this.bc(98, 67)),\n            new Ball(...this.bc(95, 90)),\n\n            new Ball(2, dLineX, this.tableHeight / 2 + this.tableOffsetY + dArcRadius),\n            new Ball(3, dLineX, this.tableHeight / 2 + this.tableOffsetY - dArcRadius),\n            new Ball(4, dLineX, this.tableHeight / 2 + this.tableOffsetY),\n\n            new Ball(5, this.tableWidth / 2 + this.tableOffsetX, this.tableHeight / 2 + this.tableOffsetY),\n\n            new Ball(6, pinkX, this.tableHeight / 2 + this.tableOffsetY),\n\n            new Ball(7, this.tableWidth + this.tableOffsetX - 324 / this.gameZoom, this.tableHeight / 2 + this.tableOffsetY)\n        ];\n\n\n    }\n\n    /**\n     *\n     * @param {MouseEvent} ev\n     */\n    onMouseMove(ev) {\n        const rect = ev.target.getBoundingClientRect();\n        this.mouseX = ev.clientX - rect.left;\n        this.mouseY = ev.clientY - rect.top;\n\n        if (!this.mouseDown) {\n            this.detectArea();\n        } else {\n            if (this.mouseArea === 'power') {\n                this.setPowerPct();\n            }\n        }\n    }\n\n    setPowerPct() {\n        const w = 400;\n\n        if (this.mouseX < this.powerBoxX) {\n            return 0;\n        }\n\n        if (this.mouseX > this.powerBoxX + w) {\n            return 1;\n        }\n\n        const d = this.mouseX - (this.powerBoxX);\n        this.powerPct = d / w;\n    }\n\n    /**\n     *\n     * @returns {number}\n     */\n    getPower() {\n        const min = 0.5;\n        const max = 15;\n\n        return (max - min) * this.powerPct + min;\n    }\n\n    /**\n     *\n     * @param {MouseEvent} ev\n     */\n    onMouseDown(ev) {\n        this.mouseDown = true;\n        if (this.mouseArea === 'power') {\n            this.setPowerPct();\n        }\n    }\n\n    /**\n     *\n     * @param {MouseEvent} ev\n     */\n    onMouseUp(ev) {\n        this.mouseDown = false;\n\n        if (this.mouseArea === 'table') {\n            this.audioQueue.play();\n            this.shooting = true;\n            this.queueBall.speed = this.getPower();\n        }\n\n        if (this.mouseArea === 'gobutton') {\n            this.setup();\n            this.run();\n        }\n    }\n\n    detectArea() {\n        // this.roundRect(this.canvas.width / 2 - 50, this.canvas.height / 2 + 70, 100, 45, 10);\n        if (this.gameOver\n            && this.mouseX > this.renderer.canvas.width / 2 - 50 && this.mouseX < this.renderer.canvas.width / 2 + 50\n            && this.mouseY > this.renderer.canvas.height / 2 + 70 && this.mouseY < this.renderer.canvas.height / 2 + 115\n        ) {\n            this.mouseArea = 'gobutton';\n            this.renderer.canvas.style.cursor = 'pointer';\n            return;\n        }\n\n        if (this.mouseX > this.powerBoxX && this.mouseX < this.powerBoxX + 400\n            && this.mouseY > this.powerBoxY && this.mouseY < this.powerBoxY + 30) {\n            this.mouseArea = 'power';\n            this.renderer.canvas.style.cursor = 'ew-resize';\n            return;\n        }\n\n        if (this.mouseX > this.tableOffsetX && this.mouseX < this.tableOffsetX + this.tableWidth\n            && this.mouseY > this.tableOffsetY && this.mouseY < this.tableOffsetY + this.tableHeight) {\n            this.mouseArea = 'table';\n            this.renderer.canvas.style.cursor = 'crosshair';\n            return;\n        }\n\n        this.renderer.canvas.style.cursor = 'inherit';\n        this.mouseArea = null;\n    }\n\n    run() {\n        this.setup();\n\n        window.requestAnimationFrame(this.loop.bind(this));\n    }\n\n    bc(pctX, pctY) {\n\n        return [\n            1,\n            this.tableWidth * pctX / 100 + this.tableOffsetX,\n            this.tableHeight * pctY / 100 + this.tableOffsetY,\n        ];\n    }\n\n    loop(timestamp) {\n\n        if (this.currentDate === null) {\n            this.currentDate = timestamp;\n        }\n\n\n        // init start time\n        const seg = Math.floor((timestamp - this.currentDate) / this.delay); // calc frame no.\n        if (seg > this.frame) {\n            this.frame = seg;\n\n            if (this.shooting) {\n                this.balls.forEach((ball) => {\n                    this.calcNewBallPosition(ball);\n                });\n\n                this.ballsAreMoving();\n            } else {\n                if (this.gameOver) {\n\n                }\n                else {\n                    this.queueBall.angle = TMath.getAngle(this.queueBall.x, this.queueBall.y, this.mouseX, this.mouseY);\n                }\n            }\n\n            if (!this.gameOver) {\n                this.renderer.render(this.balls, this.queueBall, this.shooting, this.powerPct);\n                window.requestAnimationFrame(this.loop.bind(this));\n            } else {\n                this.renderer.renderGameOver();\n            }\n        } else {\n            window.requestAnimationFrame(this.loop.bind(this));\n        }\n    }\n\n    ballsAreMoving() {\n        let moving = false;\n        this.balls.forEach(ball => {\n            if (ball.speed > 0) {\n                moving = true;\n            }\n        });\n\n        if (!moving) {\n            this.setupNewShot();\n        }\n\n        this.shooting = moving;\n    }\n\n    setupNewShot() {\n        if (this.pottedBallsShot.length === 0) {\n            this.gameOver = true;\n            return;\n        }\n\n        if (this.phase === 2) {\n            this.respotBalls();\n        }\n\n        if (this.phase === 1) {\n            this.phase = 2;\n        } else {\n            this.phase = 1;\n        }\n\n        this.queueBallCollisions = 0;\n        this.renderer.pottedBalls = this.pottedBallsAll;\n        this.pottedBallsShot = [];\n        this.firstTouchedBallType = null;\n    }\n\n    respotBalls() {\n        this.pottedBallsShot.forEach((ball) => {\n            if (!this.spotIsBlocked(ball.x, ball.y)) {\n                ball.x = ball.originalX;\n                ball.y = ball.originalY;\n            } else {\n                const spot = this.findNextHighestSpot(ball);\n                ball.x = spot.x;\n                ball.y = spot.y;\n            }\n\n            ball.potted = false;\n        });\n    }\n\n    findNextHighestSpot(testBall) {\n        let ball;\n        for (let i = 7; i <= 2; i--) {\n            ball = this.getBallByType(i);\n            if (!this.spotIsBlocked(ball.originalX, ball.originalY)) {\n                return {\n                    x: ball.originalX,\n                    y: ball.originalY,\n                };\n            }\n        }\n\n        ball = this.getBallByType(testBall.type);\n        for (let i = 0; i < 200; i++) {\n            if (!this.spotIsBlocked(ball.originalX + i, ball.originalY)) {\n                return {\n                    x: ball.originalX + i,\n                    y: ball.originalY,\n                };\n            }\n        }\n\n        return {\n            x: 0,\n            y: ball.originalY,\n        }\n\n\n    }\n\n    /**\n     *\n     * @param {number} type\n     * @returns {Ball}\n     */\n    getBallByType(type) {\n        let result = null;\n        this.balls.forEach((ball) => {\n            if (ball.type === type) {\n                result = ball;\n            }\n        });\n\n        return result;\n    }\n\n    /**\n     *\n     * @param {number} x\n     * @param {number} y\n     * @returns {boolean}\n     */\n    spotIsBlocked(x, y) {\n        let blocked = false;\n        this.balls.forEach((ball) => {\n            if (TMath.getDistance(x, y, ball.x, ball.y) < (this.ballRadius * 2) + 1) {\n                blocked = true;\n            }\n        });\n\n        return blocked;\n    }\n\n    /**\n     *\n     * @param {Ball} ball\n     */\n    calcNewBallPosition(ball) {\n        const l = ball.speed;\n        ball.x = (Math.sin(ball.angle + Math.PI) * l) + ball.x;\n        ball.y = -(Math.cos(ball.angle + Math.PI) * l) + ball.y;\n        if (ball.speed > 3) {\n            ball.speed *= 0.995;\n        } else if (ball.speed > 1) {\n            ball.speed *= 0.993;\n        } else {\n            ball.speed *= 0.99;\n        }\n\n        ball.speed = (ball.speed < 0.07) ? 0 : ball.speed;\n\n        this.testCollisions(ball);\n    }\n\n    /**\n     *\n     * @param {Ball} testBall\n     */\n    testCollisions(testBall) {\n        if (testBall.potted || testBall.speed === 0) {\n            return;\n        }\n\n        let tpmAngle = testBall.angle;\n\n        if (this.ballIsPotted(testBall)) {\n            this.audioPot.play();\n            testBall.potted = true;\n            testBall.x = -1000;\n            testBall.y = -1000;\n            testBall.speed = 0;\n\n            if (this.isPotFoul(testBall)) {\n                this.gameOver = true;\n                this.renderer.renderFoul();\n                return;\n            }\n\n            this.pottedBallsAll.push(testBall);\n            this.pottedBallsShot.push(testBall);\n\n            return;\n        }\n\n        this.balls.forEach((ball) => {\n            if (ball === testBall) {\n                return;\n            }\n\n            const d = TMath.getDistance(testBall.x, testBall.y, ball.x, ball.y);\n\n            if (d < this.ballRadius * 2) {\n                const sound = this.audioHit.cloneNode();\n                sound.volume = 0.05;\n                sound.play();\n                if (this.isCollisionFoul(ball)) {\n                    this.gameOver = true;\n                    this.renderer.renderFoul();\n                    return;\n                }\n\n                if (testBall.type === 0) {\n                    this.queueBallCollisions++;\n                    if (!this.firstTouchedBallType) {\n                        this.firstTouchedBallType = ball.type;\n                    }\n                }\n\n\n                const angle = TMath.getAngle(ball.x, ball.y, testBall.x, testBall.y);\n                const c = TMath.getCoordsByDistanceAndAngle(this.ballRadius * 2.05, angle, ball.x, ball.y);\n                testBall.x = c.x;\n                testBall.y = c.y;\n\n                ball.angle = TMath.getAngle(ball.x, ball.y, testBall.x, testBall.y) - Math.PI;\n\n                console.log(tpmAngle, ball.angle, testBall, ball);\n\n                if (tpmAngle - ball.angle > Math.PI) {\n                    tpmAngle -= 2 * Math.PI;\n                    testBall.angle = tpmAngle;\n                }\n\n                if (testBall.type === 0) {\n                    console.log(tpmAngle, ball.angle);\n                }\n                let diff = (ball.angle - testBall.angle) / (Math.PI * 2);\n\n                testBall.angle = (testBall.angle - diff) % (2 * Math.PI);\n\n                let pct = (Math.abs(ball.angle - tpmAngle) / (Math.PI / 2));\n\n                if (Math.abs(pct) > 1) {\n                    pct = 0.5;\n                }\n\n                ball.speed = testBall.speed * (1 - pct);\n                testBall.speed = testBall.speed * pct + (0.2 * testBall.speed) + this.yRotation;\n            }\n\n            // Cushions\n            if (testBall.x - this.ballRadius < this.tableOffsetX || testBall.x + this.ballRadius > this.tableWidth + this.tableOffsetX) {\n                if (testBall.x + this.ballRadius > this.tableWidth + this.tableOffsetX) {\n                    testBall.x = this.tableWidth - this.ballRadius + this.tableOffsetX;\n                } else {\n                    testBall.x = this.ballRadius + this.tableOffsetX;\n                }\n\n                testBall.angle = -testBall.angle;\n                testBall.speed *= 0.85;\n            }\n\n            if (testBall.y - this.ballRadius < this.tableOffsetY || testBall.y + this.ballRadius > this.tableHeight + this.tableOffsetY) {\n\n                if (testBall.y + this.ballRadius > this.tableHeight + this.tableOffsetY) {\n                    testBall.y = this.tableHeight + this.tableOffsetY - this.ballRadius;\n                } else {\n                    testBall.y = this.ballRadius + this.tableOffsetY;\n                }\n\n                testBall.angle -= Math.PI;\n                testBall.angle = -testBall.angle;\n                testBall.speed *= 0.85;\n            }\n        });\n    }\n\n    /**\n     *\n     * @param {Ball} ball\n     * @returns {boolean}\n     */\n    ballIsPotted(ball) {\n        const dP1 = TMath.getDistance(ball.x, ball.y, this.tableOffsetX, this.tableOffsetY);\n        if (dP1 < this.ballRadius * this.pocketScale) {\n            return true;\n        }\n\n        const dP2 = TMath.getDistance(ball.x, ball.y, this.tableOffsetX + this.tableWidth / 2, this.tableOffsetY);\n        if (dP2 < this.ballRadius * this.pocketScale) {\n            return true;\n        }\n\n        const dP3 = TMath.getDistance(ball.x, ball.y, this.tableOffsetX + this.tableWidth, this.tableOffsetY);\n        if (dP3 < this.ballRadius * this.pocketScale) {\n            return true;\n        }\n\n\n        const dP4 = TMath.getDistance(ball.x, ball.y, this.tableOffsetX + this.tableWidth, this.tableOffsetY + this.tableHeight);\n        if (dP4 < this.ballRadius * this.pocketScale) {\n            return true;\n        }\n\n        const dP5 = TMath.getDistance(ball.x, ball.y, this.tableOffsetX + this.tableWidth / 2, this.tableOffsetY + this.tableHeight);\n        if (dP5 < this.ballRadius * this.pocketScale) {\n            return true;\n        }\n\n        const dP6 = TMath.getDistance(ball.x, ball.y, this.tableOffsetX, this.tableOffsetY + this.tableHeight);\n        return dP6 < this.ballRadius * this.pocketScale;\n    }\n\n    isCollisionFoul(ball) {\n        if (this.queueBallCollisions > 0) {\n            return false;\n        }\n\n        if (this.phase === 1 && ball.type !== 1) {\n            return true;\n        }\n\n        return this.phase === 2 && ball.type < 2;\n    }\n\n    /**\n     *\n     * @param {Ball} ball\n     * @returns {boolean}\n     */\n    isPotFoul(ball) {\n        if (ball.type === 0) {\n            return true;\n        }\n\n        if (this.phase === 1 && ball.type !== 1) {\n            return true;\n        }\n\n        if (this.phase === 2 && ball.type < 2) {\n            return true;\n        }\n\n        return !!(this.phase === 2 && this.firstTouchedBallType && ball.type !== this.firstTouchedBallType);\n    }\n\n\n}\n\nexport default Game;","import React from 'react';\nimport Game from './game';\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        const game = new Game();\n        game.run();\n        console.log('Component DID MOUNT!')\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <canvas id=\"canvas\" width=\"1110\" height=\"600\"/>\n            </div>\n        );\n    };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}